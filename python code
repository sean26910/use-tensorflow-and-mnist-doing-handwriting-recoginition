import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt
import numpy as np

# 1. 載入 MNIST 資料集
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data() 

# 2. 正規化到 0~1 並加上通道維度（CNN 用）
x_train = x_train.reshape(-1, 28, 28, 1).astype("float32") / 255.0
x_test = x_test.reshape(-1, 28, 28, 1).astype("float32") / 255.0

# 3. 建立 CNN 模型
model = models.Sequential([
    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    layers.MaxPooling2D(2, 2),
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.MaxPooling2D(2, 2),
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10, activation='softmax')  # 10 類別
])

# 4. 編譯模型
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# 5. 訓練模型
model.fit(x_train, y_train, epochs=5, validation_split=0.1)

# 6. 測試模型
test_loss, test_acc = model.evaluate(x_test, y_test)
print(f"測試準確率：{test_acc:.2f}")

# 7. 隨機顯示 10 張測試圖片與預測結果
for i in range(10):
    idx = np.random.randint(0, len(x_test))
    image = x_test[idx]
    plt.imshow(image.squeeze(), cmap='gray')
    plt.axis('off')
    plt.title(f"computer predict:{model.predict(image.reshape(1, 28, 28, 1)).argmax()}")
    plt.show()
